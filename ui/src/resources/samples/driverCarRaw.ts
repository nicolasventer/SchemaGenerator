export default "import { faker } from \"@faker-js/faker\"; // here faker-js is used, it is not mandatory but should match perfectly with this library\r\nimport dayjs from \"dayjs\"; // here dayjs is used, it is not mandatory but should match perfectly with this library\r\nimport { Store, WriteToFile, addTime, generate, generatePreview, getIdFn, getRandomDateFn, getRandomElementFn,\r\n\tgetRandomElementsFn, getRandomFloatFn, getRandomIntFn, randomBoolean, randomDate, randomFloat, randomInt,\r\n\trandomString, shuffle, unique_, type Result, type SchemaGenerator, type TimeUnitT } from \"schema-generator-utils\";\r\n\r\nconst getResult = async (): Promise<Result> => {\r\n\t// DO NOT CHANGE TEXT ABOVE\r\n\r\n\tconst result: Result = [];\r\n\r\n\ttype Driver = {\r\n\t\tid: number;\r\n\t\tname: string;\r\n\t};\r\n\r\n\tconst driverGenerator: SchemaGenerator<Driver> = {\r\n\t\tid: getIdFn(),\r\n\t\tname: faker.person.fullName,\r\n\t};\r\n\r\n\tconst drivers = generate<Driver[]>([driverGenerator, 100]);\r\n\r\n\tresult.push({ name: \"Drivers\", data: drivers });\r\n\r\n\tconst CarModelValues = [\"Audi\", \"BMW\", \"Mercedes\", \"Porsche\"] as const;\r\n\ttype CarModelType = (typeof CarModelValues)[number];\r\n\r\n\ttype Car = {\r\n\t\tid: number;\r\n\t\tmodel: CarModelType;\r\n\t\tdriver: number | null;\r\n\t\tprice: number | null;\r\n\t};\r\n\r\n\tconst carGenerator: SchemaGenerator<Car> = {\r\n\t\tid: getIdFn(),\r\n\t\tmodel: getRandomElementFn(CarModelValues),\r\n\t\tdriver: () => Store.set(\"driver\", randomBoolean() ? getRandomElementFn(drivers)().id : null),\r\n\t\tprice: () => (Store.get(\"driver\") ? null : getRandomIntFn(1e5, 1e7)() / 100),\r\n\t};\r\n\r\n\tconst cars = generate<Car[]>([carGenerator, [10, 20]]);\r\n\r\n\tresult.push({ name: \"Cars\", data: cars });\r\n\r\n\treturn result;\r\n};\r\n";